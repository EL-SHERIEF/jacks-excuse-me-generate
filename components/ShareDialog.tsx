'use client';

import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog';
import { motion } from 'framer-motion';
import { FacebookIcon, TwitterIcon, Share, Copy } from 'lucide-react';
import { toast } from 'sonner';

interface ShareDialogProps {
  isOpen: boolean;
  onClose: () => void;
  excuse: string;
}

export function ShareDialog({ isOpen, onClose, excuse }: ShareDialogProps) {
  const shareUrls = {
    twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(
      `"${excuse.substring(0, 100)}..."\n\nGenerated by Excuse Generator! ๐ญ\n\n#FreelancerExcuses #EgyptianHumor`
    )}`,
    facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(
      window.location.href
    )}&quote=${encodeURIComponent(excuse)}`,
    whatsapp: `https://wa.me/?text=${encodeURIComponent(
      `${excuse}\n\nGenerated by Excuse Generator! ๐ญ`
    )}`,
  };

  const handleShare = (platform: 'twitter' | 'facebook' | 'whatsapp') => {
    window.open(shareUrls[platform], '_blank', 'noopener,noreferrer');
    onClose();
  };

  const handleCopyLink = async () => {
    try {
      await navigator.clipboard.writeText(excuse);
      toast.success('Excuse copied to clipboard!');
      onClose();
    } catch (error) {
      toast.error('Failed to copy excuse');
    }
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-md bg-[#ffffff10] backdrop-blur-lg border-[#f6df553d]">
        <DialogHeader>
          <DialogTitle className="text-xl text-gray-200">ุดุงุฑู ุงูุนุฐุฑ </DialogTitle>
          <DialogDescription className="text-gray-400">
            ุงุฎุชุงุฑ ุนุงูุฒ ุชุดุงุฑู ุงูุนุฐุฑ ุฏุง ููู:
          </DialogDescription>
        </DialogHeader>
        <div className="grid grid-cols-2 gap-4 py-4">
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => handleShare('twitter')}
            className="flex items-center gap-3 p-4 rounded-lg bg-blue-500/20 hover:bg-blue-500/30 border border-blue-500/50 transition-colors"
          >
            <TwitterIcon className="w-5 h-5 text-blue-400" />
            <span className="text-blue-400">ุชููุชุฑ(x)</span>
          </motion.button>

          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => handleShare('facebook')}
            className="flex items-center gap-3 p-4 rounded-lg bg-indigo-500/20 hover:bg-indigo-500/30 border border-indigo-500/50 transition-colors"
          >
            <FacebookIcon className="w-5 h-5 text-indigo-400" />
            <span className="text-indigo-400">ููุณุจูู</span>
          </motion.button>

          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => handleShare('whatsapp')}
            className="flex items-center gap-3 p-4 rounded-lg bg-green-500/20 hover:bg-green-500/30 border border-green-500/50 transition-colors"
          >
            <Share className="w-5 h-5 text-green-400" />
            <span className="text-green-400">ูุงุชุณุงุจ</span>
          </motion.button>

          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={handleCopyLink}
            className="flex items-center gap-3 p-4 rounded-lg bg-purple-500/20 hover:bg-purple-500/30 border border-purple-500/50 transition-colors"
          >
            <Copy className="w-5 h-5 text-purple-400" />
            <span className="text-purple-400">ูุณุฎ ุงูุฑุงุจุท</span>
          </motion.button>
        </div>
      </DialogContent>
    </Dialog>
  );
}