'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';
import {
  Facebook,
  Twitter,
  Linkedin,
  Bookmark,
  MessageCircle,
  ArrowUpRight,
} from 'lucide-react';

export function HappyUserSection() {
  const [copied, setCopied] = useState(false);

  const socials = [
    {
      label: 'Facebook',
      icon: Facebook,
      link: 'https://www.facebook.com/Dev.Elsherief',
    },
    {
      label: 'Twitter',
      icon: Twitter,
      link: 'https://x.com/FullStackAhmed',
    },
    {
      label: 'LinkedIn',
      icon: Linkedin,
      link: 'https://www.linkedin.com/in/elsherief/',
    },
  ];

  const handleCopy = async () => {
    await navigator.clipboard.writeText('https://o3zorni.vercel.app/');
    setCopied(true);
    setTimeout(() => setCopied(false), 1500);
  };

  return (
    <div className="w-full max-w-4xl mx-auto px-4 py-12">
      <motion.h2
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="text-2xl md:text-3xl font-bold text-center mb-10 text-[#f6df55]"
      >
        ЁЯда ┘З┘Д ╪г┘Ж╪к ┘Е╪│╪к╪о╪п┘Е ╪│╪╣┘К╪п╪Я
      </motion.h2>

      <div className="space-y-5">
        {/* Donate */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex items-center justify-between bg-[#ffffff05] border-2 border-[#f6df553d] hover:border-[#f6df55] rounded-2xl p-5 backdrop-blur-sm transition-all"
        >
        <div className='flex flex-row gap-2'><span className="text-[#f6df55] text-lg font-semibold">╪з╪п╪╣┘Е┘Ж╪з ╪и┘Б┘Ж╪м╪з┘Ж ┘В┘З┘И╪й</span>
        <svg width={30} height={30} viewBox="0 0 89 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M36.7511 83.2577H42.2173C39.1551 87.149 36.0743 90.732 33.1661 94.7447C35.1827 95.5902 36.5224 94.9549 37.568 93.717C39.5706 91.3486 41.4705 88.8914 43.417 86.4716C44.2899 85.3879 45.1769 84.3135 46.0684 83.2017H51.4226C47.5295 88.1487 43.8511 92.8715 39.902 97.5055H21.6688C19.5169 99.7851 16.8141 100.028 13.9246 99.9626C10.3536 99.8739 6.77793 99.9907 3.18824 100C2.67943 100 2.17062 99.8972 1.18567 99.7898C5.81632 95.6696 5.81632 95.6696 5.81632 95.6696C6.65656 94.9456 7.52481 94.3943 8.15032 93.6329C11.5299 89.3772 14.8489 85.0702 18.1772 80.7679C18.3471 80.4871 18.4879 80.1897 18.5973 79.8803C17.715 79.203 16.7581 79.4132 15.8712 79.4132C13.3878 79.3851 10.8951 79.3478 8.40239 79.4132C5.65294 79.5019 3.07154 78.8479 0 77.8483C2.5674 77.2223 4.696 77.6287 6.78727 77.5586C8.87853 77.4886 10.9885 77.5586 13.0797 77.5586C15.2597 77.5586 17.435 77.5306 19.6149 77.5353C21.6782 77.5353 23.7414 77.5726 26.2575 77.596C23.6527 80.9687 21.3701 83.9678 19.0314 86.9388C16.6928 89.9098 14.4148 92.6519 11.9174 95.7584C12.6549 95.8798 13.1031 96.076 13.4998 95.9966C16.226 95.4454 18.6346 94.3897 20.3945 92.0446C22.6258 89.0643 25.0065 86.2007 27.2938 83.3231H32.788L23.9562 94.5345C25.9587 95.4687 27.107 95.2398 28.3721 93.6843C30.7061 90.7927 33.0401 87.859 35.3461 84.9488C35.7802 84.3835 36.2423 83.865 36.7511 83.2577Z" fill="#ED1C24"/>
<path d="M71.9291 77.7642H89C88.1971 79.287 87.1328 80.1419 86.0125 81.0341C84.0659 81.179 82.054 81.3471 80.0421 81.4639C78.0302 81.5807 76.0183 81.6414 74.0577 81.7255L69.3897 88.2328C69.9168 88.449 70.4664 88.6056 71.0282 88.6999C72.5827 88.7513 74.1418 88.6999 75.6962 88.7279C77.7595 88.7793 78.385 89.2932 79.2252 91.5308C78.7603 93.2433 77.7387 94.7521 76.3217 95.8191C74.9213 96.9496 74.87 98.9302 73.1568 99.8505H42.8148V99.5889L45.2562 99.1825L62.3457 77.6941H67.4058C66.645 79.4505 55.4091 93.6983 53.2151 95.7117C53.4672 95.8892 53.6819 96.1788 53.92 96.1788C59.5216 96.1788 65.1232 96.1788 70.8695 96.1788L73.9877 92.0259C69.5951 90.9515 65.5853 92.4464 61.6409 91.6242C61.9816 90.2134 68.9416 80.8099 71.9291 77.7642Z" fill="#ED1C24"/>
<path d="M60.1051 20.4602C61.6129 21.3571 63.088 22.3287 64.6424 23.1322C67.4852 24.599 70.384 25.9678 73.2502 27.3879C73.3715 27.4533 73.4416 27.6261 73.717 27.9998C72.55 29.149 71.383 30.3682 70.1413 31.4987C68.8996 32.6292 67.5459 33.7036 66.2248 34.7687C65.8755 35.0583 65.4913 35.3031 65.0812 35.4974C62.6398 36.6092 60.2451 37.7724 57.5144 38.1414C56.5434 38.2722 55.7872 39.4868 54.3868 39.0056L55.6565 38.5385L54.7229 36.9595L57.463 36.6512V33.0916C55.7592 31.6902 53.2292 31.8163 50.9978 30.7559C50.2556 33.2037 52.9024 34.1988 52.865 36.5672L49.0233 33.1617L49.1447 31.849C47.8983 31.5547 47.4782 32.5778 46.918 32.9281C46.7593 34.4136 46.6146 35.731 46.4512 37.0483H46.1011C46.3765 37.9265 46.6519 38.8047 46.9274 39.669C44.5934 40.6032 35.4534 40.2389 31.9478 38.9729C37.2459 36.8428 42.152 34.493 46.2225 30.826C50.293 27.159 53.5559 22.6417 56.2353 17.4752C61.6549 19.7128 66.7243 22.4362 71.9058 24.9494C71.6117 25.9117 71.0562 25.58 70.5941 25.3511C67.8727 24.0291 65.1699 22.6651 62.4391 21.3618C61.6621 21.0418 60.8672 20.7673 60.0584 20.5396C59.6476 19.7828 58.9428 19.6053 58.1912 19.6053L56.8608 18.7738C56.4314 19.3344 56.1 19.7501 55.7872 20.1752C54.1861 22.3521 52.6456 24.5757 50.9698 26.7152C49.5694 28.4623 48.0383 30.0879 46.5633 31.765L46.4279 31.9191L46.5212 31.7229C48.7806 30.84 50.2183 28.9621 51.656 27.201C53.5606 24.8653 55.199 22.3568 57.0662 19.7641L58.2239 19.582C58.2239 20.2219 58.2239 20.8573 58.2239 21.4926L58.0885 21.6L58.1866 21.4552L60.1051 20.4602ZM44.6447 33.0729L45.2329 32.9188L44.9575 32.5404C44.8641 32.7273 44.7754 32.9188 44.6867 33.1103L44.5794 33.2691L44.6447 33.0729ZM59.1155 29.3872L58.1819 28.9201C57.8691 28.4529 57.5564 27.9531 57.2483 27.4673H58.7094C59.1762 28.6632 60.2591 28.9948 61.5102 29.4433L62.4438 27.8363L62.0937 27.556L60.6933 28.4296L58.6487 27.542L58.9054 26.575H60.0678C60.2358 26.6872 60.4039 26.7993 60.1611 26.6358H60.0257L59.0922 25.6501L63.3867 27.0889L64.8945 25.3418L60.8987 23.221C59.6243 23.7348 59.1108 24.515 59.1342 25.6501C57.9998 25.7622 57.337 26.3461 57.267 27.5187C56.6928 27.5794 56.17 27.6775 56.5341 28.6398L58.1819 28.8874L59.1155 29.3545C59.2975 29.8824 59.5823 30.2888 60.2685 29.8217L59.1155 29.3872ZM64.8945 28.7379L64.9645 28.5744L64.4977 28.3315L64.395 28.5697L64.8945 28.7379Z" fill="#ED1C24"/>
<path d="M59.5263 39.7344L60.9967 39.1971C61.1337 39.4296 61.2345 39.6816 61.2954 39.9446C61.2954 47.1852 61.4121 54.4259 61.2954 61.6619C61.2254 66.1931 59.0922 68.0804 54.5269 68.0944C47.9917 68.0944 41.4565 68.0944 34.9213 68.0944C34.0706 68.093 33.222 68.0116 32.3866 67.8515C31.1542 67.6256 30.0469 66.9567 29.2731 65.9707C28.4993 64.9847 28.1125 63.7497 28.1854 62.4981C28.2834 56.0375 28.2367 49.577 28.1854 43.1164C28.1854 41.5655 27.9146 40.0193 27.9146 38.4731C27.9146 37.0109 28.1994 35.5488 28.204 34.0866C28.232 25.211 28.204 16.3353 28.204 7.4597C28.204 6.83373 28.204 6.21243 28.204 5.59114C28.2881 2.32116 30.482 0.0742233 33.8056 0.0228379C37.386 -0.0285474 40.9663 0.0228379 44.542 0.0228379H56.3054C60.2965 1.26076 61.5102 3.90477 61.3841 7.49707C61.2814 10.4541 61.3561 13.4111 61.3281 16.3727C61.3281 16.9613 61.1974 17.5499 61.1181 18.274C59.685 18.0824 59.615 17.2042 59.6196 16.2466C59.6196 13.0514 59.5823 9.86079 59.6196 6.67023C59.6476 4.62883 59.0455 3.00319 56.9169 1.96614H53.2245L51.6654 4.09162H37.7081L36.191 1.98949H32.3912C30.3933 3.07793 29.6184 4.6662 29.6418 6.96453C29.7491 15.686 29.6791 24.4028 29.6838 33.1243C29.6838 42.383 29.6962 51.6433 29.7211 60.9051C29.7211 61.3722 29.7211 61.8394 29.7211 62.3065C29.9265 64.8805 31.3456 66.2585 33.9223 66.2912C37.2693 66.3286 40.6162 66.2912 43.9585 66.2912C47.6929 66.2912 51.4273 66.2912 55.1617 66.2912C57.8971 66.2912 59.1388 65.1514 59.4609 62.4467C59.5085 61.825 59.5209 61.2012 59.4983 60.5781C59.5263 53.6645 59.5263 46.7461 59.5263 39.7344ZM46.7873 2.40525L46.8433 2.23708L46.6566 2.34919L46.7873 2.40525Z" fill="#ED1C24"/>
<path d="M40.4435 33.0916C40.0654 33.6242 39.804 34.3809 39.2858 34.6612C37.0405 35.8664 34.7346 36.9642 32.4146 38.02C32.0038 38.2068 31.4156 38.02 31.0142 37.9826C30.3186 36.768 30.7387 36.0533 31.5743 35.4133C32.8349 34.5104 34.0486 33.5438 35.2107 32.5171C35.8595 31.9144 36.2517 31.0362 36.7605 30.2795L36.7091 30.3308L38.1562 30.798L38.1142 30.7419C38.4596 31.9845 39.1691 32.8674 40.4949 33.1243L40.4435 33.0916Z" fill="#ED1C24"/>
<path d="M47.5949 81.5667C49.9756 77.6801 49.7795 77.5913 55.4464 78.2126L52.6737 81.5667H47.5949Z" fill="#ED1C24"/>
<path d="M31.6397 77.9323H36.5737L33.8056 81.5527H28.4234C29.259 80.4409 29.9265 79.5019 30.6547 78.619C30.9511 78.3473 31.2823 78.1164 31.6397 77.9323Z" fill="#ED1C24"/>
<path d="M45.9564 77.9697L43.0996 81.534H37.7734L40.6209 77.9697H45.9564Z" fill="#ED1C24"/>
<path d="M17.0475 80.2634C16.6461 81.7255 15.8712 81.7862 15.0776 81.7862C12.2768 81.7862 9.47603 81.8563 6.67523 81.7302C5.38294 81.6002 4.11592 81.2856 2.91283 80.7959C5.19081 79.9083 7.58082 80.3661 9.88681 80.282C12.1928 80.198 14.5221 80.2634 17.0475 80.2634Z" fill="#ED1C24"/>
<path d="M50.0176 63.2875H38.7537C39.4119 62.7083 39.6873 62.2318 40 62.2271C43.112 62.1679 46.2132 62.1586 49.3034 62.1991C49.5881 62.1991 49.8682 62.5775 50.1483 62.783L50.0176 63.2875Z" fill="#ED1C24"/>
<path d="M36.7558 30.2795C35.6822 31.139 34.6038 31.9939 33.5442 32.8674C32.9081 33.4409 32.2152 33.948 31.4763 34.3809C31.6583 33.3766 32.5499 32.9048 33.1428 32.2228C33.7546 31.5178 34.4144 30.856 35.1173 30.2421C35.8735 29.5881 36.7044 29.0228 37.5634 28.3735L41.4518 32.844L40.4435 33.0963L40.4902 33.1337L38.1095 30.7513L38.1515 30.8073L37.2693 28.9995L36.7044 30.3355L36.7558 30.2795Z" fill="#ED1C24"/>
<path d="M6.07773 82.884C8.10364 81.9918 13.1871 81.9217 15.073 82.6411C13.934 83.9211 12.8136 83.9584 6.07773 82.884Z" fill="#ED1C24"/>
<path d="M73.1522 30.3215C73.6563 29.4853 74.1651 28.6538 74.7533 27.6822L72.8861 25.9397C74.5339 25.7435 75.2668 26.6685 76.5598 27.3411L73.1382 30.2935L73.1522 30.3215Z" fill="#ED1C24"/>
<path d="M13.4438 84.3975H9.64875V84.1266H13.4065L13.4438 84.3975Z" fill="#ED1C24"/>
<path d="M73.1288 30.2935C72.9141 31.0175 72.55 31.5874 71.7284 31.6949L71.7704 31.7323C72.0645 31.1016 72.2372 30.3589 73.1708 30.3308L73.1288 30.2935Z" fill="#ED1C24"/>
<path d="M49.1447 35.133C49.1447 35.0256 49.112 34.9135 49.1447 35.133Z" fill="#ED1C24"/>
<path d="M69.8472 33.1103L69.7212 33.2411L69.8892 33.1524L69.8472 33.1103Z" fill="#ED1C24"/>
<path d="M69.8892 33.1617L69.9593 33.0169L69.8472 33.1197L69.8892 33.1617Z" fill="#ED1C24"/>
<path d="M71.7191 31.6762L71.607 31.8444L71.7611 31.7136L71.7191 31.6762Z" fill="#ED1C24"/>
<path d="M63.4941 25.7996C61.9723 26.3742 61.2861 25.6735 60.4412 24.529C61.8183 24.4075 62.5978 24.9027 63.4941 25.7996Z" fill="#ED1C24"/>
</svg>
</div>
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => window.open('Tel:*9*7*01066091372*25#', '_blank')}
            className="flex items-center gap-2 px-5 py-2 rounded-xl border-2 border-[#f6df5590] text-[#f6df5590] bg-[#f6df5510] hover:border-[#f6df55] hover:text-[#f6df55] transition-all"
          >
            ╪к╪и╪▒╪╣
          </motion.button>
        </motion.div>

        {/* Socials */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex flex-col items-center bg-[#ffffff05] border-2 border-[#f6df553d] hover:border-[#f6df55] rounded-2xl p-6 backdrop-blur-sm transition-all"
        >
          <span className="text-[#f6df55] text-lg font-semibold mb-4">╪к╪з╪и╪╣┘Ж╪з</span>
          <div className="flex flex-wrap justify-center gap-3">
            {socials.map((s) => (
              <motion.button
                key={s.label}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => window.open(s.link, '_blank')}
                className="flex items-center gap-2 px-4 py-2 rounded-xl border-2 border-[#f6df5590] text-[#f6df5590] bg-[#f6df5510] hover:border-[#f6df55] hover:text-[#f6df55] transition-all"
              >
                <s.icon className="w-4 h-4" />
                {s.label}
              </motion.button>
            ))}
          </div>
        </motion.div>

        {/* Bookmark */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex items-center justify-between bg-[#ffffff05] border-2 border-[#f6df553d] hover:border-[#f6df55] rounded-2xl p-5 backdrop-blur-sm transition-all"
        >
          <span className="text-[#f6df55] text-lg font-semibold">╪з╪▒╪м╪╣┘Д┘Ж╪з ╪к╪з┘Ж┘К</span>
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => alert('╪и╪е┘Е┘Г╪з┘Ж┘Г ╪н┘Б╪╕ ┘З╪░┘З ╪з┘Д╪╡┘Б╪н╪й ╪и╪з┘Д╪╢╪║╪╖ ╪╣┘Д┘Й CTRL + D ╪╣┘Д┘Й ┘Д┘И╪н╪й ╪з┘Д┘Е┘Б╪з╪к┘К╪н. ')}
            className="flex items-center gap-2 px-5 py-2 rounded-xl border-2 border-[#f6df5590] text-[#f6df5590] bg-[#f6df5510] hover:border-[#f6df55] hover:text-[#f6df55] transition-all"
          >
            <Bookmark className="w-4 h-4" />
            Bookmark
          </motion.button>
        </motion.div>

        {/* Link copy */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex items-center justify-between bg-[#ffffff05] border-2 border-[#f6df553d] hover:border-[#f6df55] rounded-2xl p-5 backdrop-blur-sm transition-all"
        >
          <span className="text-[#f6df55] text-lg font-semibold">╪▒╪з╪и╪╖ ╪з┘Д╪г╪п╪з╪й</span>
          <div className="flex items-center gap-2">
            <input
              value="https://o3zorni.vercel.app"
              readOnly
              className="bg-[#f6df5510] text-[#f6df55] px-3 py-2 rounded-lg border border-[#f6df553d] w-56 text-sm text-center"
            />
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={handleCopy}
              className={`px-4 py-2 rounded-xl font-semibold transition-all ${
                copied
                  ? 'bg-[#f6df55] text-[#0b0b09] transition-all border-2 border-[#f6df55]'
                  : 'border-2 border-[#f6df5590] text-[#f6df5590] bg-[#f6df5510] hover:border-[#f6df55] hover:text-[#f6df55] transition-all'
              }`}
            >
              {copied ? '╪к┘Е ╪з┘Д┘Ж╪│╪о ' : '┘Ж╪│╪о'}
            </motion.button>
          </div>
        </motion.div>

        {/* Feedback */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex items-center justify-between bg-[#ffffff05] border-2 border-[#f6df553d] hover:border-[#f6df55] rounded-2xl p-5 backdrop-blur-sm transition-all"
        >
          <span className="text-[#f6df55] text-lg font-semibold">╪╣┘Ж╪п┘Г ┘Е┘Д╪з╪н╪╕╪з╪к╪Я</span>
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => window.open('mailto:contact@your-site.com')}
            className="flex items-center gap-2 px-5 py-2 rounded-xl border-2 border-[#f6df5590] text-[#f6df5590] bg-[#f6df5510] hover:border-[#f6df55] hover:text-[#f6df55] transition-all"
          >
            <MessageCircle className="w-4 h-4" />
            ╪к┘И╪з╪╡┘Д ┘Е╪╣┘Ж╪з
          </motion.button>
        </motion.div>
      </div>
    </div>
  );
}
